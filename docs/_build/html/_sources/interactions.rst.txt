.. discord.py-message-components documentation master file, created by
   sphinx-quickstart on Sat Jun 26 14:55:47 2021.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to discord.py-message-components's documentation!
=========================================================

Installing:
___________

**Python 3.5.3 or higher is required**

first uninstall the original `discord.py <https://pypi.org/project/discord.py>`_ Library:

.. code:: sh

    # Linux/macOS
    python3 -m pip uninstall discord.py

    # Windows
    py -3 -m pip uninstall discord.py

then install `this Library <https://pypi.org/project/discord.py-message-components>`_ using:

.. code:: sh

    # Linux/macOS
    python3 -m pip install -U discord.py-message-components

    # Windows
    py -3 -m pip install -U discord.py-message-components



quickstart
__________

sending-buttons
~~~~~~~~~~~~~~~~

.. code-block:: python

   import discord
   from discord.ext import commands
   from discord.components import Button, ButtonColor


   client = commands.Bot(command_prefix=commands.when_mentioned_or('!'))


   @client.command()
   async def buttons(ctx):
      await ctx.send('Hey here are some Buttons', components=[[
         Button(label="Hey i\'m a red Button",
                  custom_id="this is an custom_id",
                  style=ButtonColor.red),
         Button(label="Hey i\'m a green Button",
                  custom_id="this is an custom_id",
                  style=ButtonColor.green),
         Button(label="Hey i\'m a blue Button",
                  custom_id="this is an custom_id",
                  style=ButtonColor.blurple),
         Button(label="Hey i\'m a grey Button",
                  custom_id="this is an custom_id",
                  style=ButtonColor.grey),
         Button(label="Hey i\'m a URL Button",
                  url="https://pypi.org/project/discord.py-message-components",
                  style=ButtonColor.grey_url)
      ]])

   client.run('Your Bot-Token')


respond to an button when he pressed by a user
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         
.. code-block:: python

   import discord
   from discord.ext import commands
   from discord.components import Button, ButtonColor


   client = commands.Bot(command_prefix=commands.when_mentioned_or('!'))


   @client.command()
   async def buttons(ctx):
      msg_with_buttons = await ctx.send('Hey here are some Buttons', components=[[
          Button(label="Hey i\'m a red Button",
                 custom_id="red",
                 style=ButtonColor.red),
          Button(label="Hey i\'m a green Button",
                 custom_id="green",
                 style=ButtonColor.green),
          Button(label="Hey i\'m a blue Button",
                 custom_id="blue",
                 style=ButtonColor.blurple),
          Button(label="Hey i\'m a grey Button",
                 custom_id="grey",
                 style=ButtonColor.grey)
      ]])
      
      def check_button(i: discord.Interaction, b: discord.ButtonClick):
          return i.author == ctx.author and i.message == msg_with_buttons
      
      interaction, button = await client.wait_for('button_click', check=check_button)

      embed = discord.Embed(title='You pressed an Button',
      description=f'You pressed a {button.custom_id} button.',
      color=discord.Color.random()) 
      await interaction.respond(embed=embed)
      
   client.run('Your Bot-Token')

.. note:: 
   You could set the :param:`hidden` to True to make the Message ephemeral.
   .. seealso:: `discord.Interaction.respond <./interaction#respond>`_


.. toctree:: 
   :maxdepth: 2
   :caption: Contents:



Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
